name: Secret Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  secret-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for thorough scanning
      
      - name: Run TruffleHog Secret Scanner
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run custom secret scanner
        run: |
          node scripts/check-exposed-secrets.js
      
      - name: Check environment files
        run: |
          # Ensure no .env files are committed
          if find . -name ".env*" -not -name "*.example" -not -path "*/node_modules/*" | grep -q .; then
            echo "❌ Found .env files that should not be committed:"
            find . -name ".env*" -not -name "*.example" -not -path "*/node_modules/*"
            exit 1
          fi
          echo "✅ No .env files found in repository"
      
      - name: Validate example environment
        run: |
          if [ -f ".env.example" ]; then
            # Check that example doesn't contain real secrets
            if grep -E "(sk_live_|sk_test_[A-Za-z0-9]{24,}|whsec_[A-Za-z0-9]{24,})" .env.example; then
              echo "❌ Found potential real secrets in .env.example"
              exit 1
            fi
            echo "✅ .env.example is clean"
          fi

  dependency-check:
    name: Check Dependencies for Vulnerabilities
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run npm audit
        run: npm audit --production
        continue-on-error: true
      
      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  code-security:
    name: Static Code Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/nodejs
            p/typescript
      
      - name: Upload SARIF results
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif